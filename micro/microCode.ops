00000:
    PC_enOut MM_enAddr
    MM_enOut DE_loadH PC_inc
    PC_enOut MM_enAddr
    MM_enOut DE_loadL PC_inc
    load_microOp
    reset_microOp

00001: ; ADD
    RB_enOut  ALU_enA  RB_selectIndexOut=0
    RB_enOut  ALU_enB  RB_selectIndexOut=1
    ALU_OP=ADD ALU_opW
    RB_enIn   ALU_enOut RB_selectIndexIn=0
    reset_microOp

00010: ; ADC
    RB_enOut  ALU_enA  RB_selectIndexOut=0
    RB_enOut  ALU_enB  RB_selectIndexOut=1
    ALU_OP=ADC ALU_opW
    RB_enIn   ALU_enOut RB_selectIndexIn=0
    reset_microOp
    
00011: ; SUB
    RB_enOut  ALU_enA  RB_selectIndexOut=0
    RB_enOut  ALU_enB  RB_selectIndexOut=1
    ALU_OP=SUB ALU_opW
    RB_enIn   ALU_enOut RB_selectIndexIn=0
    reset_microOp
  
00100: ; AND
    RB_enOut  ALU_enA  RB_selectIndexOut=0
    RB_enOut  ALU_enB  RB_selectIndexOut=1
    ALU_OP=AND ALU_opW
    RB_enIn   ALU_enOut RB_selectIndexIn=0
    reset_microOp

00101: ; OR
    RB_enOut  ALU_enA  RB_selectIndexOut=0
    RB_enOut  ALU_enB  RB_selectIndexOut=1
    ALU_OP=OR ALU_opW
    RB_enIn   ALU_enOut RB_selectIndexIn=0
    reset_microOp
  
00110: ; XOR
    RB_enOut  ALU_enA  RB_selectIndexOut=0
    RB_enOut  ALU_enB  RB_selectIndexOut=1
    ALU_OP=XOR ALU_opW
    RB_enIn   ALU_enOut RB_selectIndexIn=0
    reset_microOp
  
00111: ; CMP
    RB_enOut  ALU_enA  RB_selectIndexOut=0
    RB_enOut  ALU_enB  RB_selectIndexOut=1
    ALU_OP=CMP ALU_opW
    reset_microOp
  
01000: ; MOV
    RB_enOut RB_selectIndexOut=1 RB_enIn RB_selectIndexIn=0
    reset_microOp

01001: ; SIG
    RB_enOut ALU_enA RB_selectIndexOut=0
    ALU_OP=cte0x01
    ALU_enOut ALU_enB
    ALU_OP=ADD
    RB_enIn ALU_enOut RB_selectIndexIn=0
    reset_microOp

01010: ; NEG
    RB_enOut ALU_enA RB_selectIndexOut=0    ; Cargar el valor de R0 en ALU A
    ALU_OP=cte0xFF                         ; Preparar constante 0xFF en ALU B
    ALU_enOut ALU_enB                       ; Ejecutar XOR con 0xFF
    ALU_OP=XOR                              ; XOR con 0xFF
    RB_enIn ALU_enOut RB_selectIndexIn=0    ; Guardar el resultado temporal en R0

    RB_enOut ALU_enA RB_selectIndexOut=0    ; Cargar nuevamente el valor de R0 en ALU A
    ALU_OP=cte0x01                          ; Preparar constante 0x01 en ALU B para el ADD
    ALU_enOut ALU_enB                       
    ALU_OP=ADD                              
    RB_enIn ALU_enOut RB_selectIndexIn=0    ; Guardar el resultado final en R0

    reset_microOp

01011: ; MIX
    RB_enOut  ALU_enA  RB_selectIndexOut=0
    RB_enOut  ALU_enB  RB_selectIndexOut=1
    ALU_OP=MIX ALU_opW
    RB_enIn   ALU_enOut RB_selectIndexIn=0
    reset_microOp

01100: ; CALL
    RB_enOut ALU_enA RB_selectIndexOut=1
    ALU_OP=cte0x01
    ALU_enOut ALU_enB
    ALU_OP=SUB
    RB_enIn ALU_enOut RB_selectIndexIn=1  ; Guardar el nuevo valor de R7
    PC_enOut MM_enAddr                    ; Guardar PC en la dirección apuntada por R7
    MM_load                               ; Escribir PC en memoria
    PC_load DE_enOutImm                   ; Cargar PC con la dirección de la rutina
    reset_microOp

01101: ; RET
    RB_enOut ALU_enA RB_selectIndexOut=1
    ALU_OP=cte0x01
    ALU_enOut ALU_enB
    ALU_OP=ADD
    RB_enIn ALU_enOut RB_selectIndexIn=1  ; Guardar el nuevo valor de R7
    MM_enAddr RB_enOut RB_selectIndexOut=1 ; Cargar la dirección apuntada por R7 en MM
    PC_load MM_enOut                      ; Cargar PC con el valor de la pila
    reset_microOp

10000: ; STR [M] <- Rx
    DE_enOutImm MM_enAddr
    RB_enOut  MM_load RB_selectIndexOut=0
    reset_microOp

10001: ; LOAD Rx <- [M]
    DE_enOutImm MM_enAddr
    RB_enIn MM_enOut RB_selectIndexOut=0
    reset_microOp

10010: ; STR [Rx] <- Ry
    RB_enOut RB_selectIndexOut=0 MM_enAddr
    RB_enOut RB_selectIndexOut=1 MM_load
    reset_microOp

10011: ; LOAD Rx <- [Ry]
    RB_enOut RB_selectIndexOut=1 MM_enAddr
    RB_enIn  RB_selectIndexOut=0 MM_enOut 
    reset_microOp

10100: ; JMP
    PC_load DE_enOutImm
    reset_microOp

10101: ; JC
    JC_microOp load_microOp
    reset_microOp
    DE_enOutImm PC_load
    reset_microOp
    
10110: ; JZ
    JZ_microOp load_microOp
    reset_microOp
    DE_enOutImm PC_load
    reset_microOp
    
10111: ; JN
    JN_microOp load_microOp
    reset_microOp
    DE_enOutImm PC_load
    reset_microOp

11000: ; INC
    RB_enOut  ALU_enA  RB_selectIndexOut=0
    ALU_OP=cte0x01 ALU_opW
    ALU_enOut ALU_enB
    ALU_OP=ADD ALU_opW
    RB_enIn   ALU_enOut RB_selectIndexIn=0
    reset_microOp
  
11001: ; DEC
    RB_enOut  ALU_enA  RB_selectIndexOut=0
    ALU_OP=cte0x01 ALU_opW
    ALU_enOut ALU_enB
    ALU_OP=SUB ALU_opW
    RB_enIn   ALU_enOut RB_selectIndexIn=0
    reset_microOp

11010: ; SHR
    RB_enOut ALU_enA
    ALU_OP=SHR ALU_opW
    RB_enIn   ALU_enOut RB_selectIndexIn=0
    reset_microOp
  
11011: ; SHL
    RB_enOut ALU_enA
    ALU_OP=SHL ALU_opW
    RB_enIn   ALU_enOut RB_selectIndexIn=0
    reset_microOp

11111: ; SET
    DE_enOutImm RB_enIn
    reset_microOp
